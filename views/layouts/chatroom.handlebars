<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8">
		<link rel="stylesheet" type="text/css" href="styleSheets/base.css"/>
    <link rel="stylesheet" type="text/css" href="styleSheets/chatroom.css"/>

    <link rel="stylesheet" href="http://code.jquery.com/mobile/1.4.5/jquery.mobile-1.4.5.min.css">
    <script src="http://code.jquery.com/jquery-1.11.3.min.js"></script>
    <script src="http://code.jquery.com/mobile/1.4.5/jquery.mobile-1.4.5.min.js"></script>

		<title>Sofa King</title>
		<script src="//code.jquery.com/jquery-2.1.4.min.js"></script>
	</head>
	<body>
    <div>
      <div>
        <div class="tab" style="background-color : rgb(60,190,60);">
          <a class="tab" href="#urlPopup" data-rel="popup">Suggest a New Video</a>

          <div data-role="popup" id="urlPopup" class="ui-content" style="min-width:1000px;">
            <form id="suggestInput" method="post" action="demoform.asp">
              <label for="usrnm" class="ui-hidden-accessible">URL:</label>
              <input type="text" name="url" id="videoSuggestion" placeholder="Video ID">
            </form>
          </div>
        </div>
        <div class="tab" style="background-color : rgb(190,60,60);">
          <a class="tab" href="#videoQ" data-rel="popup">Video Queue</a>

          <div data-role="popup" id="videoQ" class="ui-content" style="min-width:1000px;">
              <!-- Write video Queue display -->
              next video to be displayed
          </div>
        </div>
        <div class="tab" style="background-color : rgb(190,60,190);">
          <a class="tab" href="#votingPopup" data-rel="popup">Voting</a>

          <div data-role="popup" id="votingPopup" class="ui-content" style="min-width:1000px;">
              <ul id="votingArea">
					  <h3>Vote to kick?</h3>
					  <h4>Select a User:</h4>
					  <ul id="list">
					     {{#each userList}}
					   	<button id="voteButton" onclick="confirmVote()">{{this.userName}}</button>
					     {{/each}}
						  <p id="demo"></p>
						  <script>
						  		function confirmVote() {
		  							var txt;
		  							var msg = confirm("Initiate vote to kick?");
		  							if (msg == true) {
		  								txt = "Initiating Vote...";
		  								//socket.emit('Call Vote');
		  							} else {
		  								txt = "Vote cancelled";
		  							}
		  						document.getElementById("demo").innerHTML = txt;
		  					}
						</script>
					  </ul>
				  </ul>
          </div>
        </div>
      </div>
			<div>
				<script src="scripts/peerinit.js">initialize({{myID}})</script>
	      <div style="width:50%; height:480px; clear:left; float:left;">
	          <!-- 1. The <iframe> (and video player) will replace this <div> tag. -->
	          <div id="player"></div>
	      </div>
				<div class="userlist" style="float:left;">
	        User List <br>
					<ul id="list">
					   <!-- {{#each userList}}
					   <div id="box">
					      {{this.userName}}
					   </div>
					   {{/each}} -->
					</ul>
				</div>
			</div>
      <div class="chatbox" style="height:500px; clear:left; overflow:scroll;">
          <ul id="chatlog"></ul>
          <form id="chatInput" action="">
              <input id="m" autocomplete="off" />
          </form>
      </div>
    </div>

    <script>
        // 2. This code loads the IFrame Player API code asynchronously.
        var tag = document.createElement('script');

        tag.src = "https://www.youtube.com/iframe_api";
        var firstScriptTag = document.getElementsByTagName('script')[0];
        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

        // 3. This function creates an <iframe> (and YouTube player)
        //    after the API code downloads.
        var player;
        function onYouTubeIframeAPIReady() {
            player = new YT.Player('player', {
                height: '100%',
                width: '100%',
                //videoId: 'qaddgd8UI90',
                events: {
                    'onReady': onPlayerReady,
                    'onStateChange': onPlayerStateChange
                }
            });
        }

        // 4. The API will call this function when the video player is ready.
        function onPlayerReady(event) {
            //event.target.playVideo();
        }

        // 5. The API calls this function when the player's state changes.
        //    The function indicates that when playing a video (state=1),
        //    the player should play for six seconds and then stop.
        var done = false;
        function onPlayerStateChange(event) {
            if (event.data === 0) {
                    player.loadVideoById(vidArr[0]);
                    $('#videoQ li').eq(0).remove();
	            vidArr.shift();
	            }  
          
        }
        function stopVideo() {
            player.stopVideo();
        }
    </script>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        var vidArr = [];
        $( document ).ready(function() {
            var socket = io();

            var query = window.location.search.slice(10);
            socket.emit('adduser', {room: query});

            $('#chatInput').submit(function (e) {
                e.preventDefault();
                socket.emit('chat message', $('#m').val());
                $('#m').val('');
                return false;
            });

            socket.on('chat message', function (userName, message) {
                $('#chatlog').append($('<li>').text(userName + ": " + message));
            });

            $('#suggestInput').submit(function (e) {
                e.preventDefault();
                socket.emit('suggest video', {suggestedvideo: $('#videoSuggestion').val()});
                $('#videoSuggestion').val('');
                return false;
            });

				// socket.on('Vote Kick', function(){
				//
				// });

            socket.on('suggest video', function (data) {
	        vidArr.push(data.suggestedvideo);
                $('#videoQ').append($('<li>fg').text(vidArr[0]));
	    });

            socket.on('change video', function (data) {
	        console.log(vidArr);
                player.loadVideoById(vidArr[0]);
	        vidArr.shift();
            });

						socket.on('userAdded', function(data){
							$('userlist').append($('<li>').text(user.userName));
						});
        });
    </script>

	</body>

</html>
